{"_id": "pickALockMacro", "name": "Pick a Lock", "type": "script", "scope": "global", "author": null, "img": "icons/svg/d20-highlight.svg", "command": "const PICK_A_LOCK_TEMPLATE = \"modules/kazguls-pf2e-macros/templates/pick-a-lock.hbs\";\n\nlet SKILL_MOD = 0;\n\nfunction getSkillMod(actor, skillSlug) {\n  if (!actor) return 0;\n\n  const system = actor.system ?? {};\n  const skills = system.skills ?? {};\n  const lore = (system.customModifiers ?? {}).lore ?? {};\n\n  if (skillSlug.startsWith(\"lore-\")) {\n    const loreKey = skillSlug.slice(5);\n    return Number(lore[loreKey]?.totalModifier ?? 0);\n  }\n\n  const skillData = skills?.[skillSlug];\n  if (!skillData) return 0;\n\n  const modifiers = skillData?.modifiers;\n  if (Array.isArray(modifiers)) {\n    const total = modifiers.reduce((sum, modifier) => {\n      if (!modifier?.enabled) return sum;\n      return sum + Number(modifier.value ?? 0);\n    }, 0);\n    return Number(total);\n  }\n\n  if (typeof skillData.totalModifier === \"number\") return skillData.totalModifier;\n  if (typeof skillData.value === \"number\") return skillData.value;\n  if (typeof skillData.mod === \"number\") return skillData.mod;\n\n  return Number(skillData) || 0;\n}\n\nfunction getSkillOptions(actor) {\n  const system = actor?.system ?? {};\n  const skills = system.skills ?? {};\n  const options = Object.entries(skills).map(([key, value]) => ({\n    slug: key,\n    label: game.i18n?.localize?.(value?.label) ?? value?.label ?? key,\n  }));\n\n  const lores = system.lores ?? {};\n  const loreOptions = Object.entries(lores).map(([key, value]) => ({\n    slug: `lore-${key}`,\n    label: value.label ?? game.i18n?.localize?.(\"PF2E.Lore\") ?? key,\n  }));\n\n  return [...options, ...loreOptions].sort((a, b) => a.label.localeCompare(b.label));\n}\n\nasync function renderPickLockDialog(actor) {\n  const skills = getSkillOptions(actor);\n  const selectedSkill = skills.find((skill) => skill.slug === \"thievery\")?.slug ?? skills.at(0)?.slug ?? \"thievery\";\n  const initialMod = getSkillMod(actor, selectedSkill);\n\n  SKILL_MOD = initialMod;\n\n  const templateData = {\n    skills,\n    selectedSkill,\n    skillMod: initialMod,\n  };\n\n  const content = await renderTemplate(PICK_A_LOCK_TEMPLATE, templateData);\n\n  return new Promise((resolve, reject) => {\n    const dialog = new Dialog({\n      title: game.i18n?.localize?.(\"PF2E.Actions.PickALock\") ?? \"Pick a Lock\",\n      content,\n      render: (html) => {\n        const form = html[0]?.querySelector?.(\"form\");\n        if (!form) return;\n\n        const skillSelect = form.querySelector(\"[name=skill]\");\n        const skillModField = form.querySelector(\"[name=skillMod]\");\n\n        if (skillModField) {\n          skillModField.value = initialMod;\n          skillModField.disabled = true;\n        }\n\n        if (skillSelect) {\n          skillSelect.value = selectedSkill;\n          skillSelect.addEventListener(\"change\", () => {\n            const skill = skillSelect.value;\n            const mod = getSkillMod(actor, skill);\n            if (skillModField) {\n              skillModField.value = mod;\n            }\n            SKILL_MOD = mod;\n          });\n        }\n\n        const reqInput =\n          form.querySelector(\"[data-req-input]\") ??\n          form.querySelector(\"[name=requestCheck]\") ??\n          form.querySelector(\"[name=request]\") ??\n          form.querySelector(\"[name=req]\");\n        const reqPayload =\n          form.querySelector(\"[data-req-payload]\") ??\n          form.querySelector(\"[name=requestPayload]\") ??\n          form.querySelector(\"[name=reqPayload]\");\n        const reqDrop =\n          form.querySelector(\"[data-req-drop]\") ??\n          form.querySelector(\"[data-inline-check-drop]\") ??\n          reqInput ??\n          null;\n\n        const updateReqPayload = (rawText) => {\n          if (!reqPayload) return;\n\n          const text = typeof rawText === \"string\" ? rawText.trim() : \"\";\n          const match = text.match(/@Check\\[[^\\]]+\\]/i);\n          reqPayload.value = match ? match[0] : \"\";\n        };\n\n        if (reqInput) {\n          reqInput.addEventListener(\"input\", () => {\n            updateReqPayload(reqInput.value);\n          });\n          reqInput.addEventListener(\"change\", () => {\n            updateReqPayload(reqInput.value);\n          });\n          updateReqPayload(reqInput.value);\n        }\n\n        if (reqDrop) {\n          const assignFromText = (text) => {\n            if (!text) return;\n            if (reqInput) {\n              reqInput.value = text;\n            }\n            updateReqPayload(text);\n          };\n\n          reqDrop.addEventListener(\"dragenter\", (event) => {\n            event.preventDefault();\n          });\n\n          reqDrop.addEventListener(\"dragover\", (event) => {\n            event.preventDefault();\n          });\n\n          reqDrop.addEventListener(\"drop\", (event) => {\n            event.preventDefault();\n            const droppedText = event.dataTransfer?.getData(\"text/plain\");\n            if (!droppedText) return;\n            assignFromText(droppedText.trim());\n          });\n        }\n      },\n      buttons: {\n        start: {\n          label: game.i18n?.localize?.(\"PF2E.Start\") ?? \"Start\",\n          callback: (html) => {\n            const form = html[0]?.querySelector?.(\"form\");\n            if (!form) return reject(new Error(\"Missing pick-a-lock form\"));\n\n            const skillField = form.querySelector(\"[name=skill]\");\n            const skillModField = form.querySelector(\"[name=skillMod]\");\n\n            const selectedSkill = skillField?.value ?? \"thievery\";\n            const computedMod = getSkillMod(actor, selectedSkill);\n\n            if (skillModField) {\n              const wasDisabled = skillModField.disabled;\n              skillModField.value = computedMod;\n              if (wasDisabled) skillModField.disabled = false;\n\n              const formData = new FormData(form);\n              if (wasDisabled) skillModField.disabled = true;\n\n              const data = Object.fromEntries(formData.entries());\n              data.skill = selectedSkill;\n              data.skillMod = Number(computedMod);\n\n              SKILL_MOD = data.skillMod;\n\n              resolve(data);\n              return;\n            }\n\n            const data = Object.fromEntries(new FormData(form).entries());\n            data.skill = selectedSkill;\n            data.skillMod = Number(computedMod);\n\n            SKILL_MOD = data.skillMod;\n\n            resolve(data);\n          },\n        },\n        cancel: {\n          label: game.i18n?.localize?.(\"Cancel\") ?? \"Cancel\",\n          callback: () => reject(new Error(\"cancelled\")),\n        },\n      },\n      default: \"start\",\n      close: () => reject(new Error(\"closed\")),\n    });\n\n    dialog.render(true);\n  });\n}\n\nasync function performPickLockRoll(actor, { skill, skillMod, dc }) {\n  const rollFormula = `1d20 + ${Number(skillMod) || 0}`;\n  const roll = await (new Roll(rollFormula)).roll({ async: true });\n  await roll.toMessage({\n    speaker: ChatMessage.getSpeaker({ actor }),\n    flavor: `${game.i18n?.localize?.(\"PF2E.Actions.PickALock\") ?? \"Pick a Lock\"} (${skill})`,\n  });\n\n  if (dc) {\n    const dcResult = roll.total >= Number(dc) ? game.i18n?.localize?.(\"PF2E.Check.Succeeded\") ?? \"Success\" : game.i18n?.localize?.(\"PF2E.Check.Failed\") ?? \"Failure\";\n    ui.notifications?.info?.(`${roll.total} vs DC ${dc}: ${dcResult}`);\n  }\n}\n\nasync function pickALock(actor = canvas?.tokens?.controlled?.[0]?.actor ?? game.user?.character ?? null) {\n  if (!actor) {\n    ui.notifications?.warn?.(\"No actor selected for Pick a Lock\");\n    return;\n  }\n\n  try {\n    const submission = await renderPickLockDialog(actor);\n    await performPickLockRoll(actor, submission);\n  } catch (error) {\n    if (error?.message !== \"cancelled\" && error?.message !== \"closed\") {\n      console.error(error);\n    }\n  }\n}\n\nconst namespace = (globalThis.kazgulsPf2eMacros ??= {});\nnamespace.pickALock = pickALock;\nnamespace.getSkillMod = getSkillMod;\nObject.defineProperty(namespace, \"SKILL_MOD\", {\n  get: () => SKILL_MOD,\n  set: (value) => {\n    SKILL_MOD = Number(value) || 0;\n  },\n  configurable: true,\n});\n\nif (game?.modules?.get) {\n  const module = game.modules.get(\"kazguls-pf2e-macros\");\n  if (module) {\n    module.api ??= {};\n    module.api.pickALock = pickALock;\n    module.api.getSkillMod = getSkillMod;\n    Object.defineProperty(module.api, \"SKILL_MOD\", {\n      get: () => SKILL_MOD,\n      set: (value) => {\n        SKILL_MOD = Number(value) || 0;\n      },\n      configurable: true,\n    });\n  }\n}\n", "folder": null, "sort": 0, "ownership": {"default": 0}, "flags": {}, "_stats": {"systemId": "pf2e", "systemVersion": "5.7.0", "coreVersion": "11.309", "createdTime": 1759730852260, "modifiedTime": 1759730852260, "lastModifiedBy": null}}